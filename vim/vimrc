" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

call plug#begin('~/dotfiles/vim/plugged')
Plug 'altercation/vim-colors-solarized'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'guns/vim-sexp'
Plug 'tpope/vim-sexp-mappings-for-regular-people'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fireplace'
Plug 'python-mode/python-mode', { 'branch': 'develop' }
call plug#end()

" Switch syntax highlighting on
syntax on

" Set color theme
set background=dark
colorscheme solarized

set backspace=indent,eol,start " Make backspace behave in a sane manner

" Navigate panes with ctrl-h(jkl) instead of ctrl-w h(jkl)
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" A visual marker of 80 char lines
set colorcolumn=80

" Highlight search results
set hlsearch

" Show matches as search is typed
set incsearch

" Leader a to remove highlighted search fields
nnoremap <leader>n :nohlsearch<cr>

" Show line, column, %, at bottom of window
set ruler

" Searches are case-sensitive only if they contain upper-case
set ignorecase
set smartcase

" Begin scrolling before hitting edges
set scrolloff=7

" Store temporary files in one place
set backupdir=~/.vim-tmp
set directory=~/.vim-tmp

" tab->spaces and such
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set autoindent

" vsplit opens to the right instead of left
set splitright
" split opens below instead of pushing current down
set splitbelow

" When doing :e <tab> shows list of possible completions like in bash.
set wildmode=list:longest,full

" Remove trailing whitespace on save and keep cursor position.
function! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Triger `autoread` when files changes on disk
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" https://vi.stackexchange.com/questions/13692/prevent-focusgained-autocmd-running-in-command-line-editing-mode
" Need vim-tmux-focus-events plugin and `set -g focus-events on` in .tmux.conf
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif

" Treat build.boot as a clojure file.
autocmd BufNewFile,BufRead build.boot set filetype=clojure

" For python-mode
autocmd FileType python setlocal nonumber
let g:pymode_lint = 0

" Write all buffers before navigating from Vim to tmux pane
let g:tmux_navigator_save_on_switch = 2

let g:sneak#label = 1
