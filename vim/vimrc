" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

let g:mapleader = ","

call plug#begin('~/dotfiles/vim/plugged')
Plug 'altercation/vim-colors-solarized'
Plug 'jnurmine/Zenburn'
Plug 'tmux-plugins/vim-tmux-focus-events' " Used for autoread file on change.
Plug 'guns/vim-sexp'
Plug 'tpope/vim-sexp-mappings-for-regular-people'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fireplace'
Plug 'vim-scripts/indentpython.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'hashivim/vim-terraform'
call plug#end()

" 256 Colors!
set t_Co=256

" Switch syntax highlighting on
syntax on

" Set color theme
set background=dark
colorscheme solarized
set colorcolumn=80

set backspace=indent,eol,start " Make backspace behave in a sane manner

" Highlight search results
set hlsearch

" Show matches as search is typed
set incsearch

" Leader n to remove highlighted search fields
nnoremap <leader>n :nohlsearch<cr>
" Leader s to save all files
nnoremap <leader>s :wa<cr>

" Show line, column, %, at bottom of window
set ruler

" Don't wrap long lines
set nowrap

" Searches are case-sensitive only if they contain upper-case
set ignorecase
set smartcase

" Begin scrolling before hitting edges
set scrolloff=7

" Store temporary files in one place
set backupdir=~/.vim-tmp
set directory=~/.vim-tmp

" tab->spaces and such
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set autoindent
autocmd FileType python set shiftwidth=4 tabstop=4 softtabstop=4 expandtab
autocmd FileType yaml set shiftwidth=2 tabstop=2 softtabstop=2 expandtab

" vsplit opens to the right instead of left
set splitright
" split opens below instead of pushing current down
set splitbelow

" When doing :e <tab> shows list of possible completions like in bash.
set wildmode=list:longest,full

" Remove trailing whitespace on save and keep cursor position.
function! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Trigger `autoread` when files changes on disk
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" https://vi.stackexchange.com/questions/13692/prevent-focusgained-autocmd-running-in-command-line-editing-mode
" Need vim-tmux-focus-events plugin and `set -g focus-events on` in .tmux.conf
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif

" Filetypes
autocmd BufNewFile,BufRead build.boot set filetype=clojure
autocmd BufNewFile,BufRead *.mat set filetype=matlab
autocmd BufNewFile,BufRead *.avsc set filetype=json

" Compile latex
autocmd BufWritePost, *.tex silent! execute "!/Library/TeX/texbin/pdflatex <afile>" | redraw!

" Set up Ctrl-P Fuzzy File Finder
let g:ctrlp_map = '<leader>t'
