# START CONDA CRAP
# Wrap up this crap...
function conda-crap() {

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/burbma/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/burbma/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/burbma/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/burbma/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

}
# END CONDA CRAP


if [[ $(uname) == 'Darwin' ]]; then
        export PATH=/usr/local/bin:$PATH
        export PATH="/usr/local/sbin:$PATH"
        [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
        alias deep="bash ~/dotfiles/bash/deep.sh"
        alias feast="bash ~/dotfiles/bash/feast.sh"
        alias all="bash ~/dotfiles/bash/all.sh"
fi

if [[ $(uname) == 'Linux' ]]; then
        source /etc/bash_completion.d/git-prompt
        alias ls='ls --color=auto'
fi

# Avoid duplicates
export HISTCONTROL=ignoreboth:erasedups
export HISTFILESIZE=-1
export HISTSIZE=-1
export HISTTIMEFORMAT="[%h %d %H:%M:%S] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=~/.bash_eternal_history
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend
# But also just immediately send every command, helpful for tmux
export PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

source ~/dotfiles/bash/bash_colors
export GIT_PS1_SHOWDIRTYSTATE="true"
export GIT_PS1_SHOWSTASHSTATE="true"
export GIT_PS1_SHOWUNTRACKEDFILES="true"
export GIT_PS1_SHOWUPSTREAM="auto"

if [ "$SSH_CONNECTION" ] || [ "$SSH_CLIENT" ] || [ "$SSH_TTY" ]; then
        PS1='\u@\h:\W/ $(__git_ps1 "\[$txtcyn\](%s)")\[$txtrst\]\$ '
else
        PS1='\W/ $(__git_ps1 "\[$txtcyn\](%s)")\[$txtrst\]\$ '
fi

bind 'set completion-ignore-case on'
export EDITOR=vim
export CLICOLOR=1
export LSCOLORS=exfxbxdxcxegedabagacad
export TERM=xterm-256color

# This fn sets the title of the iterm tab
# bash$ title my-little-pony
function title {
    echo -ne "\033]0;"$*"\007"
}

# JAVA
# `brew install --cask adoptopenjdk{8..15}`
export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)
export JAVA_12_HOME=$(/usr/libexec/java_home -v12)
export JAVA_13_HOME=$(/usr/libexec/java_home -v13)
export JAVA_14_HOME=$(/usr/libexec/java_home -v14)
export JAVA_15_HOME=$(/usr/libexec/java_home -v15)

alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'
alias java12='export JAVA_HOME=$JAVA_12_HOME'
alias java13='export JAVA_HOME=$JAVA_13_HOME'
alias java14='export JAVA_HOME=$JAVA_14_HOME'
alias java15='export JAVA_HOME=$JAVA_15_HOME'

java11 # Default to java11

#alias pi="ssh pi@192.168.1.13"
alias gf='fg'
alias matlab="/Applications/MATLAB_R2018b.app/bin/matlab -nodesktop -nosplash"

export PATH="$HOME/.poetry/bin:$PATH"
source /usr/local/opt/autoenv/activate.sh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/burbma/Downloads/google-cloud-sdk/path.bash.inc' ]; then . '/Users/burbma/Downloads/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/burbma/Downloads/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/burbma/Downloads/google-cloud-sdk/completion.bash.inc'; fi

export PATH="$HOME/.cargo/bin:$PATH"
